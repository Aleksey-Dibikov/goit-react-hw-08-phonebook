{"version":3,"sources":["components/ContactsForm/ContactsForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/auth/auth-operation.js","redux/auth/auth-slice.js","redux/store.js","components/Container/Container.js","pages/Home.js","pages/Login.js","pages/Register.js","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","pages/Phonebook.js","routes/PublicRoute.js","components/Navigation.js","redux/auth/auth-selector.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","contact","post","deleteContact","contactId","delete","id","items","createReducer","name","number","fulfilled","payload","state","filter","loading","pending","rejected","error","combineReducers","token","headers","common","Authorization","register","credentials","logIn","logOut","authSlice","createSlice","initialState","user","email","isLoggedIn","extraReducers","action","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Container","children","className","styles","containerApp","Home","form","width","label","display","flexDirection","marginBottom","Login","dispatch","useDispatch","useState","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","style","autoComplete","type","onChange","Register","setName","getLoading","getFilter","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","s","TaskList","map","TaskList_item","TaskList_button","onClick","ContactsForm","setNumber","nameId","uuidv4","numberId","handleInputChange","searchName","alert","TaskEditor","TaskEditor_label","TaskEditor_input","pattern","title","required","TaskEditor_button","Filter","Phonebook","isLoading","onFetchContacts","PublicRoute","isAuth","Component","component","to","link","textDecoration","padding","fontWeight","color","activeLink","Navigation","activestyle","authSelectors","container","alignItems","avatar","marginRight","UserMenu","AuthNav","header","justifyContent","borderBottom","AppBar","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc0b1c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactsForm_TaskEditor__2VeED\",\"TaskEditor_label\":\"ContactsForm_TaskEditor_label__17ZZj\",\"TaskEditor_input\":\"ContactsForm_TaskEditor_input__vn7L0\",\"TaskEditorinput\":\"ContactsForm_TaskEditorinput__1K7lu\",\"TaskEditor_button\":\"ContactsForm_TaskEditor_button__Gs4c6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__1vssD\",\"TaskList_item\":\"ContactList_TaskList_item__2eNkl\",\"TaskList_button\":\"ContactList_TaskList_button__1TfR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"Container_containerApp__2QKgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor_input\":\"Filter_TaskEditor_input__1ids8\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('contact/filter');\r\n\r\nexport {\r\n    changeFilter,\r\n};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n    'contact/fetchContacts',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.get('/contact');\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error)\r\n        }\r\n    }\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n    'contact/addContact',\r\n    async (contact, {rejectWithValue}) => {\r\n        try {\r\n            const { data } = await axios.post('/contacts', contact);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error)\r\n        }\r\n    }\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n    'contact/deleteContact',\r\n    async ( contactId, {rejectWithValue} ) => {\r\n        try {\r\n            const {data: {id}} = await axios.delete(`/contacts/${contactId}`);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error)\r\n        }\r\n    }\r\n);\r\n\r\nexport { addContact, deleteContact, fetchContacts };","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  changeFilter,\r\n} from './contacts-actions';\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n} from './contacts-operations';\r\n\r\n\r\nconst contacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(contacts, {\r\n  [fetchContacts.fulfilled]: (_, {payload})=> payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  \r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  \r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n})","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = createAsyncThunk(\r\n    'auth/register',\r\n    async (credentials) => {\r\n        try {\r\n            const { data } = await axios.post('/users/signup', credentials);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n);\r\n\r\nconst logIn = createAsyncThunk(\r\n    'auth/login',\r\n    async (credentials) => {\r\n        try {\r\n            const { data } = await axios.post('/users/login', credentials);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n);\r\n\r\nconst logOut = createAsyncThunk(\r\n    'auth/logout',\r\n    async () => {\r\n        try {\r\n            await axios.post('/users/logout');\r\n            token.unset();\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n)\r\n\r\nexport { register, logIn, logOut };","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { register, logIn, logOut } from \"./auth-operation\";\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        }\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport authReducer from '../redux/auth/auth-slice';\r\n\r\n// const contactPersistConfig = {\r\n//     key: 'root',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// };\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware: [...getDefaultMiddleware(\r\n        {\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n    ],\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };","import styles from './Container.module.css';\r\n\r\nexport function Container({ children }) {\r\n  return <div className={styles.containerApp}>{children}</div>;\r\n}","export function Home() {\r\n    return (\r\n        <h1>Home page!!!</h1>\r\n    );\r\n};","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from '../redux/auth/auth-operation';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport function Login() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Mail\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../redux/auth/auth-operation';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport function Register() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Registration page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Name\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Mail\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Register now</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getAllContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (allContacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return allContacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    }\r\n);\r\n\r\nexport { getLoading, getFilter, getVisibleContacts };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  useSelector,\r\n  useDispatch\r\n} from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selector';\r\nimport s from './ContactList.module.css';\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.TaskList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.TaskList_item}>\r\n          {name} : {number}\r\n          <button\r\n            className={s.TaskList_button}\r\n            onClick={() => dispatch(deleteContact.fulfilled(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport s from './ContactsForm.module.css';\r\n\r\nexport default function ContactsForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');  \r\n  const { contacts } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const searchName = name =>\r\n      contacts.items.map(contact => contact.name).includes(name);\r\n    \r\n    if (searchName(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact({ name, number }));\r\n    }\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.TaskEditor}>\r\n      <label id={nameId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв,\r\n            апострофа, тире и пробелов.\r\n            Например Adrian, Jacob Mercer,\r\n            Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label id={numberId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.TaskEditor_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onAddContact: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selector';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={s.TaskEditor_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};","import {\r\n  // connect,\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\n\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport ContactsForm from '../components/ContactsForm/ContactsForm';\r\nimport Filter from '../components/Filter/Filter';\r\n\r\nimport { fetchContacts } from '../redux/contacts/contacts-operations';\r\nimport { getLoading } from '../redux/contacts/contacts-selector';\r\n\r\n\r\nexport function Phonebook() {\r\n    const isLoading = useSelector(getLoading);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            <h1>Phonebook</h1>\r\n            <ContactsForm />\r\n            <h2>Contacts</h2>\r\n            <Filter />\r\n            <ContactList\r\n                onFetchContacts={() => dispatch(fetchContacts.fulfilled())}\r\n            />\r\n            {isLoading && <h1>loading ...</h1>}\r\n        </>\r\n    )\r\n}","import { Navigate } from \"react-router\";\r\n\r\nexport function PublicRoute({isAuth, component: Component}) {\r\n    return (\r\n        <>\r\n            {isAuth ? <Navigate to='/' /> : <Component />}\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5',\r\n  },\r\n};\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/\"\r\n      style={styles.link}\r\n      activestyle={styles.activeLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/phonebook\"\r\n      style={styles.link}\r\n      activestyle={styles.activeLink}\r\n    >\r\n      Phonebook\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserName\r\n}\r\n\r\nexport {authSelectors};","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth/auth-selector';\r\nimport { logOut } from '../redux/auth/auth-operation';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>Welcome, { name }</span>\r\n      <button type=\"button\"\r\n        onClick={() => dispatch(logOut())}\r\n      >\r\n        Exit\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        style={styles.link}\r\n        activestyle={styles.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        style={styles.link}\r\n        activestyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport {authSelectors} from '../redux/auth/auth-selector';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn  = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn  ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport {Container} from './components/Container/Container';\r\nimport { Home } from './pages/Home';\r\nimport { Login } from './pages/Login';\r\nimport { Register } from './pages/Register';\r\nimport { Phonebook } from './pages/Phonebook';\r\nimport { PrivateRoute } from './routes/PrivateRoute';\r\nimport { PublicRoute } from './routes/PublicRoute';\r\nimport AppBar from './components/AppBar';\r\n\r\nconst isAuth = false;\r\nfunction App () {\r\n  return (\r\n    <>\r\n      <AppBar />\r\n\r\n      <Container>\r\n        <Routes>\r\n          <Route path=\"/\"\r\n            element={<PublicRoute isAuth={isAuth} component={Home} />}\r\n          />\r\n          <Route path=\"/register\"\r\n            element={<PublicRoute isAuth={isAuth} component={Register} />}\r\n          />\r\n          <Route path=\"/login\"\r\n            element={<PublicRoute isAuth={isAuth} component={Login} />}\r\n          />\r\n          <Route path=\"/phonebook\"\r\n            element={<PublicRoute isAuth={isAuth} component={Phonebook} />}\r\n          />\r\n          </Routes>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport {persistor, store} from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={'please wait'} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}